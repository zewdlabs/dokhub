services:
  web:
    container_name: web
    build:
      context: ../apps/web/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3000:3000
  api:
    container_name: api
    build:
      context: ../apps/api/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3001:3001
  log:
    container_name: log
    image: datalust/seq
    restart: unless-stopped
    ports:
      - 5342:80
      - 5341:5341
    volumes:
      - logdata:/var/lib/seq/data
    environment:
      ACCEPT_EULA: "Y"
  database:
    container_name: database
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      # specifying user and database is needed to avoid `FATAL:  role "root" does not exist`
      # spam in the logs
      test: ['CMD', 'pg_isready', '-U', 'prisma', '-d', 'tests']
      interval: 5s
      timeout: 2s
      retries: 20
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_PORT}
    ports:
      - 5050:5050
  objstorage:
    container_name: objstorage
    image: bitnami/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - objdata:/var/lib/minio/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
  vectorstore:
    container_name: vectorstore
    image: qdrant/qdrant:latest
    restart: always
    volumes:
      - vectordata:/var/lib/qdrant/data
    ports:
      - 6333:6333
      - 6334:6334
volumes:
  objdata:
  dbdata:
  vectordata:
  logdata:
